{"version":3,"sources":["html.sortable.js"],"names":["root","factory","define","amd","exports","module","sortable","this","dragging","draggingHeight","matches","placeholders","sortables","_data","element","key","value","undefined","h5s","data","_removeData","window","Element","prototype","_filter","nodes","wanted","Array","slice","call","result","i","length","push","indexOf","_on","event","callback","addEventListener","events","_off","removeEventListener","_attr","attribute","setAttribute","_removeAttr","removeAttribute","_offset","rect","getClientRects","left","scrollX","top","scrollY","_removeItemEvents","items","_removeSortableEvents","_attachGhost","ghost","dataTransfer","effectAllowed","setData","setDragImage","draggedItem","x","y","_addGhostPos","parseInt","pageX","pageY","_makeGhost","_getGhost","_removeSortableData","_removeItemData","_listsConnected","curList","destList","_getHandles","handle","handles","querySelectorAll","concat","_destroySortable","sortableElement","opts","children","_enableSortable","spanEl","document","createElement","dragDrop","disableIEFix","parent","parentElement","_disableSortable","_reloadSortable","_index","_attached","parentNode","_html2element","html","tagName","innerHTML","firstChild","_before","target","insertBefore","_after","nextElementSibling","_detach","removeChild","_makeEvent","name","detail","e","createEvent","initEvent","_dispatchEventOnConnected","forEach","dispatchEvent","_matches","el","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","sortableElements","options","method","String","connectWith","placeholder","dragImage","placeholderClass","draggingClass","hoverClass","option","test","index","startParent","classList","add","apply","split","getAttribute","id","remove","stopImmediatePropagation","console","log","getComputedStyle","height","item","startparent","newParent","style","display","oldDisplay","oldindex","elementIndex","oldElementIndex","endparent","visiblePlaceholder","preventDefault","stopPropagation","filter","onDragOverEnter","dropEffect","thisHeight","placeholderIndex","thisIndex","forcePlaceholderSize","deadZone","offsetTop","appendChild","destroy","enable","disable"],"mappings":"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","file":"html.sortable.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.sortable = factory();\n  }\n}(this, function() {\n/*\r\n * HTML5 Sortable library\r\n * https://github.com/voidberg/html5sortable\r\n *\r\n * Original code copyright 2012 Ali Farhadi.\r\n * This version is mantained by Alexandru Badiu <andu@ctrlz.ro> & Lukas Oppermann <lukas@vea.re>\r\n * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\r\n *\r\n * Released under the MIT license.\r\n */\r\n'use strict';\r\n/*\r\n * variables global to the plugin\r\n */\r\nvar dragging;\r\nvar draggingHeight;\r\nvar placeholders = [];\r\nvar sortables = [];\r\n/**\r\n * Get or set data on element\r\n * @param {Element} element\r\n * @param {string} key\r\n * @param {*} value\r\n * @return {*}\r\n */\r\nvar _data = function(element, key, value) {\r\n  if (value === undefined) {\r\n    return element && element.h5s && element.h5s.data && element.h5s.data[key];\r\n  } else {\r\n    element.h5s = element.h5s || {};\r\n    element.h5s.data = element.h5s.data || {};\r\n    element.h5s.data[key] = value;\r\n  }\r\n};\r\n/**\r\n * Remove data from element\r\n * @param {Element} element\r\n */\r\nvar _removeData = function(element) {\r\n  if (element.h5s) {\r\n    delete element.h5s.data;\r\n  }\r\n};\r\n/**\r\n * Cross-browser shortcut for actual `Element.matches` method,\r\n * which has vendor prefix in older browsers\r\n */\r\nvar matches;\r\nswitch (true) {\r\n  case 'matches' in window.Element.prototype:\r\n    matches = 'matches';\r\n    break;\r\n  case 'mozMatchesSelector' in window.Element.prototype:\r\n    matches = 'mozMatchesSelector';\r\n    break;\r\n  case 'msMatchesSelector' in window.Element.prototype:\r\n    matches = 'msMatchesSelector';\r\n    break;\r\n  case 'webkitMatchesSelector' in window.Element.prototype:\r\n    matches = 'webkitMatchesSelector';\r\n    break;\r\n}\r\n/**\r\n * Filter only wanted nodes\r\n * @param {Array|NodeList} nodes\r\n * @param {Array/string} wanted\r\n * @returns {Array}\r\n */\r\nvar _filter = function(nodes, wanted) {\r\n  if (!wanted) {\r\n    return Array.prototype.slice.call(nodes);\r\n  }\r\n  var result = [];\r\n  for (var i = 0; i < nodes.length; ++i) {\r\n    if (typeof wanted === 'string' && nodes[i][matches](wanted)) {\r\n      result.push(nodes[i]);\r\n    }\r\n    if (wanted.indexOf(nodes[i]) !== -1) {\r\n      result.push(nodes[i]);\r\n    }\r\n  }\r\n  return result;\r\n};\r\n/**\r\n * @param {Array|Element} element\r\n * @param {Array|string} event\r\n * @param {Function} callback\r\n */\r\nvar _on = function(element, event, callback) {\r\n  if (element instanceof Array) {\r\n    for (var i = 0; i < element.length; ++i) {\r\n      _on(element[i], event, callback);\r\n    }\r\n    return;\r\n  }\r\n  element.addEventListener(event, callback);\r\n  element.h5s = element.h5s || {};\r\n  element.h5s.events = element.h5s.events || {};\r\n  element.h5s.events[event] = callback;\r\n};\r\n/**\r\n * @param {Array|Element} element\r\n * @param {Array|string} event\r\n */\r\nvar _off = function(element, event) {\r\n  if (element instanceof Array) {\r\n    for (var i = 0; i < element.length; ++i) {\r\n      _off(element[i], event);\r\n    }\r\n    return;\r\n  }\r\n  if (element.h5s && element.h5s.events && element.h5s.events[event]) {\r\n    element.removeEventListener(event, element.h5s.events[event]);\r\n    delete element.h5s.events[event];\r\n  }\r\n};\r\n/**\r\n * @param {Array|Element} element\r\n * @param {string} attribute\r\n * @param {*} value\r\n */\r\nvar _attr = function(element, attribute, value) {\r\n  if (element instanceof Array) {\r\n    for (var i = 0; i < element.length; ++i) {\r\n      _attr(element[i], attribute, value);\r\n    }\r\n    return;\r\n  }\r\n  element.setAttribute(attribute, value);\r\n};\r\n/**\r\n * @param {Array|Element} element\r\n * @param {string} attribute\r\n */\r\nvar _removeAttr = function(element, attribute) {\r\n  if (element instanceof Array) {\r\n    for (var i = 0; i < element.length; ++i) {\r\n      _removeAttr(element[i], attribute);\r\n    }\r\n    return;\r\n  }\r\n  element.removeAttribute(attribute);\r\n};\r\n/**\r\n * @param {Element} element\r\n * @returns {{left: *, top: *}}\r\n */\r\nvar _offset = function(element) {\r\n  var rect = element.getClientRects()[0];\r\n  return {\r\n    left: rect.left + window.scrollX,\r\n    top: rect.top + window.scrollY\r\n  };\r\n};\r\n/*\r\n * remove event handlers from items\r\n * @param {Array|NodeList} items\r\n */\r\nvar _removeItemEvents = function(items) {\r\n  _off(items, 'dragstart');\r\n  _off(items, 'dragend');\r\n  _off(items, 'selectstart');\r\n  _off(items, 'dragover');\r\n  _off(items, 'dragenter');\r\n  _off(items, 'drop');\r\n};\r\n/*\r\n * Remove event handlers from sortable\r\n * @param {Element} sortable a single sortable\r\n */\r\nvar _removeSortableEvents = function(sortable) {\r\n  _off(sortable, 'dragover');\r\n  _off(sortable, 'dragenter');\r\n  _off(sortable, 'drop');\r\n};\r\n/*\r\n * Attach ghost to dataTransfer object\r\n * @param {Event} original event\r\n * @param {object} ghost-object with item, x and y coordinates\r\n */\r\nvar _attachGhost = function(event, ghost) {\r\n  // this needs to be set for HTML5 drag & drop to work\r\n  event.dataTransfer.effectAllowed = 'move';\r\n  event.dataTransfer.setData('text', '');\r\n\r\n  // check if setDragImage method is available\r\n  if (event.dataTransfer.setDragImage) {\r\n    event.dataTransfer.setDragImage(ghost.draggedItem, ghost.x, ghost.y);\r\n  }\r\n};\r\n/**\r\n * _addGhostPos clones the dragged item and adds it as a Ghost item\r\n * @param {Event} event - the event fired when dragstart is triggered\r\n * @param {object} ghost - .draggedItem = Element\r\n */\r\nvar _addGhostPos = function(event, ghost) {\r\n  if (!ghost.x) {\r\n    ghost.x = parseInt(event.pageX - _offset(ghost.draggedItem).left);\r\n  }\r\n  if (!ghost.y) {\r\n    ghost.y = parseInt(event.pageY - _offset(ghost.draggedItem).top);\r\n  }\r\n  return ghost;\r\n};\r\n/**\r\n * _makeGhost decides which way to make a ghost and passes it to attachGhost\r\n * @param {Element} draggedItem - the item that the user drags\r\n */\r\nvar _makeGhost = function(draggedItem) {\r\n  return {\r\n    draggedItem: draggedItem\r\n  };\r\n};\r\n/**\r\n * _getGhost constructs ghost and attaches it to dataTransfer\r\n * @param {Event} event - the original drag event object\r\n * @param {Element} draggedItem - the item that the user drags\r\n */\r\n// TODO: could draggedItem be replaced by event.target in all instances\r\nvar _getGhost = function(event, draggedItem) {\r\n  // add ghost item & draggedItem to ghost object\r\n  var ghost = _makeGhost(draggedItem);\r\n  // attach ghost position\r\n  ghost = _addGhostPos(event, ghost);\r\n  // attach ghost to dataTransfer\r\n  _attachGhost(event, ghost);\r\n};\r\n/*\r\n * Remove data from sortable\r\n * @param {Element} sortable a single sortable\r\n */\r\nvar _removeSortableData = function(sortable) {\r\n  _removeData(sortable);\r\n  _removeAttr(sortable, 'aria-dropeffect');\r\n};\r\n/*\r\n * Remove data from items\r\n * @param {Array|Element} items\r\n */\r\nvar _removeItemData = function(items) {\r\n  _removeAttr(items, 'aria-grabbed');\r\n  _removeAttr(items, 'draggable');\r\n  _removeAttr(items, 'role');\r\n};\r\n/*\r\n * Check if two lists are connected\r\n * @param {Element} curList\r\n * @param {Element} destList\r\n */\r\nvar _listsConnected = function(curList, destList) {\r\n  if (curList === destList) {\r\n    return true;\r\n  }\r\n  if (_data(curList, 'connectWith') !== undefined) {\r\n    return _data(curList, 'connectWith') === _data(destList, 'connectWith');\r\n  }\r\n  return false;\r\n};\r\nvar _getHandles = function(items, handle) {\r\n  var result = [];\r\n  var handles;\r\n  if (!handle) {\r\n    return items;\r\n  }\r\n  for (var i = 0; i < items.length; ++i) {\r\n    handles = items[i].querySelectorAll(handle);\r\n    result = result.concat(Array.prototype.slice.call(handles));\r\n  }\r\n  return result;\r\n};\r\n/*\r\n * Destroy the sortable\r\n * @param {Element} sortableElement a single sortable\r\n */\r\nvar _destroySortable = function(sortableElement) {\r\n  var opts = _data(sortableElement, 'opts') || {};\r\n  var items = _filter(sortableElement.children, opts.items);\r\n  var handles = _getHandles(items, opts.handle);\r\n  // remove event handlers & data from sortable\r\n  _removeSortableEvents(sortableElement);\r\n  _removeSortableData(sortableElement);\r\n  // remove event handlers & data from items\r\n  _off(handles, 'mousedown');\r\n  _removeItemEvents(items);\r\n  _removeItemData(items);\r\n};\r\n/*\r\n * Enable the sortable\r\n * @param {Element} sortableElement a single sortable\r\n */\r\nvar _enableSortable = function(sortableElement) {\r\n  var opts = _data(sortableElement, 'opts');\r\n  var items = _filter(sortableElement.children, opts.items);\r\n  var handles = _getHandles(items, opts.handle);\r\n  _attr(sortableElement, 'aria-dropeffect', 'move');\r\n  _attr(handles, 'draggable', 'true');\r\n  // IE FIX for ghost\r\n  // can be disabled as it has the side effect that other events\r\n  // (e.g. click) will be ignored\r\n  var spanEl = (document || window.document).createElement('span');\r\n  if (typeof spanEl.dragDrop === 'function' && !opts.disableIEFix) {\r\n    _on(handles, 'mousedown', function() {\r\n      if (items.indexOf(this) !== -1) {\r\n        this.dragDrop();\r\n      } else {\r\n        var parent = this.parentElement;\r\n        while (items.indexOf(parent) === -1) {\r\n          parent = parent.parentElement;\r\n        }\r\n        parent.dragDrop();\r\n      }\r\n    });\r\n  }\r\n};\r\n/*\r\n * Disable the sortable\r\n * @param {Element} sortableElement a single sortable\r\n */\r\nvar _disableSortable = function(sortableElement) {\r\n  var opts = _data(sortableElement, 'opts');\r\n  var items = _filter(sortableElement.children, opts.items);\r\n  var handles = _getHandles(items, opts.handle);\r\n  _attr(sortableElement, 'aria-dropeffect', 'none');\r\n  _attr(handles, 'draggable', 'false');\r\n  _off(handles, 'mousedown');\r\n};\r\n/*\r\n * Reload the sortable\r\n * @param {Element} sortableElement a single sortable\r\n * @description events need to be removed to not be double bound\r\n */\r\nvar _reloadSortable = function(sortableElement) {\r\n  var opts = _data(sortableElement, 'opts');\r\n  var items = _filter(sortableElement.children, opts.items);\r\n  var handles = _getHandles(items, opts.handle);\r\n  // remove event handlers from items\r\n  _removeItemEvents(items);\r\n  _off(handles, 'mousedown');\r\n  // remove event handlers from sortable\r\n  _removeSortableEvents(sortableElement);\r\n};\r\n/**\r\n * Get position of the element relatively to its sibling elements\r\n * @param {Element} element\r\n * @returns {number}\r\n */\r\nvar _index = function(element) {\r\n  if (!element.parentElement) {\r\n    return 0;\r\n  }\r\n  return Array.prototype.indexOf.call(element.parentElement.children, element);\r\n};\r\n/**\r\n * Whether element is in DOM\r\n * @param {Element} element\r\n * @returns {boolean}\r\n */\r\nvar _attached = function(element) {\r\n  return !!element.parentNode;\r\n};\r\n/**\r\n * Convert HTML string into DOM element.\r\n * @param {Element|string} html\r\n * @param {string} tagname\r\n * @returns {Element}\r\n */\r\nvar _html2element = function(html, tagName) {\r\n  if (typeof html !== 'string') {\r\n    return html;\r\n  }\r\n  var parentElement = document.createElement(tagName);\r\n  parentElement.innerHTML\t= html;\r\n  return parentElement.firstChild;\r\n};\r\n/**\r\n * Insert before target\r\n * @param {Element} target\r\n * @param {Element} element\r\n */\r\nvar _before = function(target, element) {\r\n  target.parentElement.insertBefore(\r\n    element,\r\n    target\r\n  );\r\n};\r\n/**\r\n * Insert after target\r\n * @param {Element} target\r\n * @param {Element} element\r\n */\r\nvar _after = function(target, element) {\r\n  target.parentElement.insertBefore(\r\n    element,\r\n    target.nextElementSibling\r\n  );\r\n};\r\n/**\r\n * Detach element from DOM\r\n * @param {Element} element\r\n */\r\nvar _detach = function(element) {\r\n  if (element.parentNode) {\r\n    element.parentNode.removeChild(element);\r\n  }\r\n};\r\n/**\r\n * Make native event that can be dispatched afterwards\r\n * @param {string} name\r\n * @param {object} detail\r\n * @returns {CustomEvent}\r\n */\r\nvar _makeEvent = function(name, detail) {\r\n  var e = document.createEvent('Event');\r\n  if (detail) {\r\n    e.detail = detail;\r\n  }\r\n  e.initEvent(name, false, true);\r\n  return e;\r\n};\r\n/**\r\n * @param {Element} sortableElement\r\n * @param {CustomEvent} event\r\n */\r\nvar _dispatchEventOnConnected = function(sortableElement, event) {\r\n  sortables.forEach(function(target) {\r\n    if (_listsConnected(sortableElement, target)) {\r\n      target.dispatchEvent(event);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Tests if an element matches a given selector. Comparable to jQuery's $(el).is('.my-class')\r\n * @param {el} DOM element\r\n * @param {selector} selector test against the element\r\n * @retirms {boolean}\r\n */\r\nvar _matches = function(el, selector) {\r\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\r\n};\r\n\r\n/*\r\n * Public sortable object\r\n * @param {Array|NodeList} sortableElements\r\n * @param {object|string} options|method\r\n */\r\nvar sortable = function(sortableElements, options) {\r\n\r\n  var method = String(options);\r\n\r\n  options = (function(options) {\r\n    var result = {\r\n      connectWith: false,\r\n      placeholder: null,\r\n      // dragImage can be null or a Element\r\n      dragImage: null,\r\n      disableIEFix: false,\r\n      placeholderClass: 'sortable-placeholder',\r\n      draggingClass: 'sortable-dragging',\r\n      hoverClass: false\r\n    };\r\n    for (var option in options) {\r\n      result[option] = options[option];\r\n    }\r\n    return result;\r\n  })(options);\r\n\r\n  if (typeof sortableElements === 'string') {\r\n    sortableElements = document.querySelectorAll(sortableElements);\r\n  }\r\n\r\n  if (sortableElements instanceof window.Element) {\r\n    sortableElements = [sortableElements];\r\n  }\r\n\r\n  sortableElements = Array.prototype.slice.call(sortableElements);\r\n\r\n  /* TODO: maxstatements should be 25, fix and remove line below */\r\n  /*jshint maxstatements:false */\r\n  sortableElements.forEach(function(sortableElement) {\r\n\r\n    if (/enable|disable|destroy/.test(method)) {\r\n      sortable[method](sortableElement);\r\n      return;\r\n    }\r\n\r\n    // get options & set options on sortable\r\n    options = _data(sortableElement, 'opts') || options;\r\n    _data(sortableElement, 'opts', options);\r\n    // reset sortable\r\n    _reloadSortable(sortableElement);\r\n    // initialize\r\n    var items = _filter(sortableElement.children, options.items);\r\n    var index;\r\n    var startParent;\r\n    var placeholder = options.placeholder;\r\n    if (!placeholder) {\r\n      placeholder = document.createElement(\r\n        /^ul|ol$/i.test(sortableElement.tagName) ? 'li' : 'div'\r\n      );\r\n    }\r\n    placeholder = _html2element(placeholder, sortableElement.tagName);\r\n    placeholder.classList.add.apply(\r\n      placeholder.classList,\r\n      options.placeholderClass.split(' ')\r\n    );\r\n\r\n    // setup sortable ids\r\n    if (!sortableElement.getAttribute('data-sortable-id')) {\r\n      var id = sortables.length;\r\n      sortables[id] = sortableElement;\r\n      _attr(sortableElement, 'data-sortable-id', id);\r\n      _attr(items, 'data-item-sortable-id', id);\r\n    }\r\n\r\n    _data(sortableElement, 'items', options.items);\r\n    placeholders.push(placeholder);\r\n    if (options.connectWith) {\r\n      _data(sortableElement, 'connectWith', options.connectWith);\r\n    }\r\n\r\n    _enableSortable(sortableElement);\r\n    _attr(items, 'role', 'option');\r\n    _attr(items, 'aria-grabbed', 'false');\r\n\r\n    // Mouse over class\r\n    if (options.hoverClass) {\r\n      var hoverClass = 'sortable-over';\r\n      if (typeof options.hoverClass === 'string') {\r\n        hoverClass = options.hoverClass;\r\n      }\r\n\r\n      _on(items, 'mouseenter', function() {\r\n        this.classList.add(hoverClass);\r\n      });\r\n      _on(items, 'mouseleave', function() {\r\n        this.classList.remove(hoverClass);\r\n      });\r\n    }\r\n\r\n    // Handle drag events on draggable items\r\n    _on(items, 'dragstart', function(e) {\r\n      e.stopImmediatePropagation();\r\n      if(options.handle && !_matches(e.target, options.handle)){\r\n        return;\r\n      }\r\n      \r\n      if (options.dragImage) {\r\n        _attachGhost(e, {\r\n          draggedItem: options.dragImage,\r\n          x: 0,\r\n          y: 0\r\n        });\r\n        console.log('WARNING: dragImage option is deprecated' +\r\n        ' and will be removed in the future!');\r\n      } else {\r\n        // add transparent clone or other ghost to cursor\r\n        _getGhost(e, this);\r\n      }\r\n      // cache selsection & add attr for dragging\r\n      this.classList.add(options.draggingClass);\r\n      dragging = this;\r\n      _attr(dragging, 'aria-grabbed', 'true');\r\n      // grab values\r\n      index = _index(dragging);\r\n      draggingHeight = parseInt(window.getComputedStyle(dragging).height);\r\n      startParent = this.parentElement;\r\n      // dispatch sortstart event on each element in group\r\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstart', {\r\n        item: dragging,\r\n        placeholder: placeholder,\r\n        startparent: startParent\r\n      }));\r\n    });\r\n    // Handle drag events on draggable items\r\n    _on(items, 'dragend', function() {\r\n      var newParent;\r\n      if (!dragging) {\r\n        return;\r\n      }\r\n      // remove dragging attributes and show item\r\n      dragging.classList.remove(options.draggingClass);\r\n      _attr(dragging, 'aria-grabbed', 'false');\r\n      dragging.style.display = dragging.oldDisplay;\r\n      delete dragging.oldDisplay;\r\n\r\n      placeholders.forEach(_detach);\r\n      newParent = this.parentElement;\r\n      _dispatchEventOnConnected(sortableElement, _makeEvent('sortstop', {\r\n        item: dragging,\r\n        startparent: startParent\r\n      }));\r\n      if (index !== _index(dragging) || startParent !== newParent) {\r\n        _dispatchEventOnConnected(sortableElement, _makeEvent('sortupdate', {\r\n          item: dragging,\r\n          index: _filter(newParent.children, _data(newParent, 'items'))\r\n            .indexOf(dragging),\r\n          oldindex: items.indexOf(dragging),\r\n          elementIndex: _index(dragging),\r\n          oldElementIndex: index,\r\n          startparent: startParent,\r\n          endparent: newParent\r\n        }));\r\n      }\r\n      dragging = null;\r\n      draggingHeight = null;\r\n    });\r\n    // Handle drop event on sortable & placeholder\r\n    // TODO: REMOVE placeholder?????\r\n    _on([sortableElement, placeholder], 'drop', function(e) {\r\n      var visiblePlaceholder;\r\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      visiblePlaceholder = placeholders.filter(_attached)[0];\r\n      _after(visiblePlaceholder, dragging);\r\n      dragging.dispatchEvent(_makeEvent('dragend'));\r\n    });\r\n\r\n    // Handle dragover and dragenter events on draggable items\r\n    var onDragOverEnter = function(e) {\r\n      if (!_listsConnected(sortableElement, dragging.parentElement)) {\r\n        return;\r\n      }\r\n\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      e.dataTransfer.dropEffect = 'move';\r\n      if (items.indexOf(this) !== -1) {\r\n        var thisHeight = parseInt(window.getComputedStyle(this).height);\r\n        var placeholderIndex = _index(placeholder);\r\n        var thisIndex = _index(this);\r\n        if (options.forcePlaceholderSize) {\r\n          placeholder.style.height = draggingHeight + 'px';\r\n        }\r\n\r\n        // Check if `this` is bigger than the draggable. If it is, we have to define a dead zone to prevent flickering\r\n        if (thisHeight > draggingHeight) {\r\n          // Dead zone?\r\n          var deadZone = thisHeight - draggingHeight;\r\n          var offsetTop = _offset(this).top;\r\n          if (placeholderIndex < thisIndex &&\r\n              e.pageY < offsetTop + deadZone) {\r\n            return;\r\n          }\r\n          if (placeholderIndex > thisIndex &&\r\n              e.pageY > offsetTop + thisHeight - deadZone) {\r\n            return;\r\n          }\r\n        }\r\n\r\n        if (dragging.oldDisplay === undefined) {\r\n          dragging.oldDisplay = dragging.style.display;\r\n        }\r\n        dragging.style.display = 'none';\r\n        if (placeholderIndex < thisIndex) {\r\n          _after(this, placeholder);\r\n        } else {\r\n          _before(this, placeholder);\r\n        }\r\n        // Intentionally violated chaining, it is more complex otherwise\r\n        placeholders\r\n          .filter(function(element) {return element !== placeholder;})\r\n          .forEach(_detach);\r\n      } else {\r\n        if (placeholders.indexOf(this) === -1 &&\r\n            !_filter(this.children, options.items).length) {\r\n          placeholders.forEach(_detach);\r\n          this.appendChild(placeholder);\r\n        }\r\n      }\r\n    };\r\n    _on(items.concat(sortableElement), 'dragover', onDragOverEnter);\r\n    _on(items.concat(sortableElement), 'dragenter', onDragOverEnter);\r\n  });\r\n\r\n  return sortableElements;\r\n};\r\n\r\nsortable.destroy = function(sortableElement) {\r\n  _destroySortable(sortableElement);\r\n};\r\n\r\nsortable.enable = function(sortableElement) {\r\n  _enableSortable(sortableElement);\r\n};\r\n\r\nsortable.disable = function(sortableElement) {\r\n  _disableSortable(sortableElement);\r\n};\r\n\r\n\r\n\nreturn sortable;\n}));\n"]}