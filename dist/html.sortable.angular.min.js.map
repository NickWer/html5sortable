{"version":3,"sources":["html.sortable.angular.js"],"names":["angular","module","directive","$timeout","$parse","require","link","scope","element","attrs","ngModel","opts","model","scallback","noop","nativeElements","slice","call","htmlSortableCallback","extend","$eval","htmlSortable","sortable","$render","$watch","addEventListener","e","data","detail","$source","startparent","attr","$dest","endparent","$sourceModel","$destModel","$start","oldindex","$end","item","index","$apply","$items","splice","assign","$item","$sourceItems","$destItems","startModel","destModel","start","end"],"mappings":"CAWE,SAASA,GACT,YAEAA,GAAQC,OAAO,mBACZC,UAAU,gBACT,WAAY,SAAU,SAASC,EAAUC,GACvC,OACEC,QAAS,WAETC,KAAM,SAASC,EAAOC,EAASC,EAAOC,GACpC,GAAIC,GACAC,EACAC,EAAYb,EAAQc,KACpBC,KAAoBC,MAAMC,KAAKT,EAE/BC,GAAMS,uBACRL,EAAYT,EAAOK,EAAMS,uBAG3BP,EAAOX,EAAQmB,UAAWZ,EAAMa,MAAMX,EAAMY,eAC5CC,SAASP,EAAgBJ,GAErBD,IACFE,EAAQR,EAAOK,EAAMC,SAErBA,EAAQa,QAAU,WAChBpB,EAAS,WACPmB,SAASP,EAAgB,WACxB,KAGLR,EAAMiB,OAAOZ,EAAO,WAClBT,EAAS,WACPmB,SAASP,EAAgB,WACxB,MACF,GAEHA,EAAe,GAAGU,iBAAiB,aAAc,SAASC,GACxD,GAAIC,GAAOD,EAAEE,OACTC,EAAUF,EAAKG,YAAYC,KAAK,aAChCJ,EAAKG,YAAYC,KAAK,iBACtBC,EAAUL,EAAKM,UAAUF,KAAK,aAC9BJ,EAAKM,UAAUF,KAAK,iBAEpBG,EAAe9B,EAAOyB,GACtBM,EAAa/B,EAAO4B,GAEpBI,EAAST,EAAKU,SACdC,EAASX,EAAKY,KAAKC,OAEvBjC,GAAMkC,OAAO,WAGX,GAAIP,EAAaP,EAAKG,YAAYvB,WAAa4B,EAAWR,EAAKM,UAAU1B,SAAU,CAEjF,GAAImC,GAASR,EAAaP,EAAKG,YAAYvB,QAC3CmC,GAAOC,OAAOL,EAAM,EAAGI,EAAOC,OAAOP,EAAQ,GAAG,IAChDF,EAAaU,OAAOrC,EAAOmC,OACtB,CACL,GAAIG,GAAQX,EAAaP,EAAKG,YAAYvB,SAAS6B,GAC/CU,EAAeZ,EAAaP,EAAKG,YAAYvB,SAC7CwC,EAAaZ,EAAWR,EAAKM,UAAU1B,YAE3CuC,GAAaH,OAAOP,EAAQ,GAC5BW,EAAWJ,OAAOL,EAAM,EAAGO,GAE3BX,EAAaU,OAAOrC,EAAOuC,GAC3BX,EAAWS,OAAOrC,EAAOwC,MAI7BlC,EAAUN,GACRyC,WAAYd,EAAaP,EAAKG,YAAYvB,SAC1C0C,UAAWd,EAAWR,EAAKM,UAAU1B,SACrC2C,MAAOd,EACPe,IAAKb,aAQrBtC","file":"html.sortable.angular.min.js","sourcesContent":["/*\r\n * AngularJS integration with the HTML5 Sortable library\r\n * https://github.com/voidberg/html5sortable\r\n *\r\n * Copyright 2013, Alexandru Badiu <andu@ctrlz.ro>\r\n * jQuery-independent implementation by Nazar Mokrynskyi <nazar@mokrynskyi.com>\r\n *\r\n * Thanks to the following contributors: samantp.\r\n *\r\n * Released under the MIT license.\r\n */\r\n;(function(angular) {\r\n  'use strict';\r\n\r\n  angular.module('htmlSortable', [])\r\n    .directive('htmlSortable', [\r\n      '$timeout', '$parse', function($timeout, $parse) {\r\n        return {\r\n          require: '?ngModel',\r\n          // TODO: fix this, if you know angular\r\n          link: function(scope, element, attrs, ngModel) { // jshint ignore:line\r\n            var opts;\r\n            var model;\r\n            var scallback = angular.noop;\r\n            var nativeElements = [].slice.call(element);\r\n\r\n            if (attrs.htmlSortableCallback) {\r\n              scallback = $parse(attrs.htmlSortableCallback);\r\n            }\r\n\r\n            opts = angular.extend({}, scope.$eval(attrs.htmlSortable));\r\n            sortable(nativeElements, opts); // jshint ignore:line\r\n\r\n            if (ngModel) {\r\n              model = $parse(attrs.ngModel);\r\n\r\n              ngModel.$render = function() {\r\n                $timeout(function() {\r\n                  sortable(nativeElements, 'reload'); // jshint ignore:line\r\n                }, 50);\r\n              };\r\n\r\n              scope.$watch(model, function() {\r\n                $timeout(function() {\r\n                  sortable(nativeElements, 'reload'); // jshint ignore:line\r\n                }, 50);\r\n              }, true);\r\n\r\n              nativeElements[0].addEventListener('sortupdate', function(e) {\r\n                var data = e.detail;\r\n                var $source = data.startparent.attr('ng-model') ||\r\n                    data.startparent.attr('data-ng-model');\r\n                var $dest   = data.endparent.attr('ng-model') ||\r\n                    data.endparent.attr('data-ng-model');\r\n\r\n                var $sourceModel = $parse($source);\r\n                var $destModel = $parse($dest);\r\n\r\n                var $start = data.oldindex;\r\n                var $end   = data.item.index();\r\n\r\n                scope.$apply(function() {\r\n                  // TODO: fix this, if you know angular\r\n                  //jscs:disable\r\n                  if ($sourceModel(data.startparent.scope()) === $destModel(data.endparent.scope())) {\r\n                    //jscs:enable\r\n                    var $items = $sourceModel(data.startparent.scope());\r\n                    $items.splice($end, 0, $items.splice($start, 1)[0]);\r\n                    $sourceModel.assign(scope, $items);\r\n                  } else {\r\n                    var $item = $sourceModel(data.startparent.scope())[$start];\r\n                    var $sourceItems = $sourceModel(data.startparent.scope());\r\n                    var $destItems = $destModel(data.endparent.scope()) || [];\r\n\r\n                    $sourceItems.splice($start, 1);\r\n                    $destItems.splice($end, 0, $item);\r\n\r\n                    $sourceModel.assign(scope, $sourceItems);\r\n                    $destModel.assign(scope, $destItems);\r\n                  }\r\n                });\r\n\r\n                scallback(scope, {\r\n                  startModel: $sourceModel(data.startparent.scope()),\r\n                  destModel: $destModel(data.endparent.scope()),\r\n                  start: $start,\r\n                  end: $end\r\n                });\r\n              });\r\n            }\r\n          }\r\n        };\r\n      }\r\n    ]);\r\n}(angular));\r\n"]}